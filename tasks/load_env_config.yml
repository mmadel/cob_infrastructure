---
# Inputs required: 'env_name' and 'service_name' must be defined before importing this task.

# Clone the config repo locally (on the controller)
- name: Clone cob-env-config repo to controller
  git:
    repo: "https://github.com/mmadel/cob-environment-configuration.git"
    dest: "./cob-env-config"
    update: yes
  delegate_to: localhost
  run_once: true
  tags: env_config

# Read infra .env as raw lines from the local controller
- name: Read infra .env file as raw lines
  set_fact:
    raw_env_lines: "{{ lookup('file', './cob-env-config/' ~ env_name ~ '/' ~ service_name ~ '/infra-' ~ service_name ~ '.env').split('\n') }}"
  delegate_to: localhost
  run_once: true
  tags: env_config

- name: Debug raw_env_lines (optional)
  debug:
    var: raw_env_lines
  tags: [debug, env_config]

# Convert key=value lines to dictionary
- name: Initialize parsed_env_vars
  set_fact:
    parsed_env_vars: {}
  tags: env_config

- name: Convert raw_env_lines to dictionary
  set_fact:
    parsed_env_vars: "{{ parsed_env_vars | combine({ item.split('=')[0]: item.split('=')[1] }) }}"
  loop: "{{ raw_env_lines | select('match', '^[^#\\s].*=.*$') }}"
  when: "'=' in item"
  delegate_to: localhost
  run_once: true
  tags: env_config

# Export structured vars
- name: Export parsed env vars
  set_fact:
    db_user: "{{ parsed_env_vars.db_user | default('') }}"
    database: "{{ parsed_env_vars.database.split(',') }}"
    # Add more infra keys as needed
  tags: env_config

# Load vault secrets (infra-secrets)
- name: Load encrypted infra secrets
  include_vars:
    file: "./cob-env-config/{{ env_name }}/{{ service_name }}/infra-{{ service_name }}-secrets.env.vault"
    name: secrets
  delegate_to: localhost
  run_once: true
  tags: env_config

# Export decrypted secret values
- name: Export secret values
  set_fact:
    root_password: "{{ secrets.root_password | default('') }}"
    db_password: "{{ secrets.db_password | default('') }}"
    jwt_secret: "{{ secrets.jwt_secret | default('') }}"
    # Add more as needed
  tags: env_config
