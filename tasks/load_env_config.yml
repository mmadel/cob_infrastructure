---
# Inputs required: 'env_name' and 'service_name' must be defined before importing this task

- name: Clone cob-env-config repo
  git:
    repo: "https://github.com/mmadel/cob-environment-configuration.git"
    dest: "/cob-env-config"
    update: yes
  tags: env_config

- name: Read .env file as raw lines
  slurp:
    src: "/cob-env-config/{{ env_name }}/{{ service_name }}/{{ service_name }}.env"
  register: slurped_env_file
  tags: env_config

- name: Set raw_env_lines from base64-decoded content
  set_fact:
    raw_env_lines: "{{ slurped_env_file['content'] | b64decode | splitlines() }}"
  tags: env_config

- name: Debug raw_env_lines (optional)
  debug:
    var: raw_env_lines
  tags: [debug, env_config]

- name: Initialize parsed_env_vars
  set_fact:
    parsed_env_vars: {}
  tags: env_config

- name: Convert raw_env_lines to dictionary (Jinja2-safe loop)
  set_fact:
    parsed_env_vars: "{{ parsed_env_vars | combine({ item.split('=')[0]: item.split('=')[1] }) }}"
  loop: "{{ raw_env_lines | select('match', '^[^#\\s].*=.*$') }}"
  when: "'=' in item"
  tags: env_config

- name: Export parsed env vars
  set_fact:
    db_user: "{{ parsed_env_vars.DB_USER }}"
    databases: "{{ parsed_env_vars.DATABASE.split(',') }}"
    # Add more vars if needed
  tags: env_config

- name: Load encrypted secrets from vault
  include_vars:
    file: "/cob-env-config/{{ env_name }}/{{ service_name }}/{{ service_name }}-secrets.env.vault"
    name: secrets
  tags: env_config

- name: Export secret values
  set_fact:
    db_user_password: "{{ secrets.db_user_password | default('') }}"
    db_root_password: "{{ secrets.db_root_password | default('') }}"
    jwt_secret: "{{ secrets.jwt_secret | default('') }}"
    # Add more as needed
  tags: env_config
