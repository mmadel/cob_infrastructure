---
- name: Get MySQL root user plugin
  community.mysql.mysql_info:
    filter: users
    login_user: root
    login_password: "{{ root_password }}"
  register: mysql_users
  ignore_errors: yes
  become: true
- name: Get MySQL users
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ root_password }}"
    query: "SELECT plugin FROM mysql.user WHERE user='root';"
  register: root_plugin
  become: true

- name: Debug root_plugin variable
    debug:
      var: root_plugin

- name: Switch root to mysql_native_password if needed
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ root_password }}"
    plugin: mysql_native_password
    priv: '*.*:ALL,GRANT'
    state: present
    login_user: root
    login_password: "{{ root_password }}"
    when: root_plugin.rows[0][0] != 'mysql_native_password'

- name: Remove anonymous MySQL users
  community.mysql.mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ root_password }}"
  become: true

- name: Remove MySQL test database
  community.mysql.mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ root_password }}"
  become: true

- name: Disallow root login remotely
  community.mysql.mysql_user:
    name: root
    host: "{{ item }}"
    state: absent
    login_user: root
    login_password: "{{ root_password }}"
  loop:
    - '%'
  become: true

- name: Ensure root user only allowed from localhost
  community.mysql.mysql_user:
    name: root
    host: localhost
    password: "{{ root_password }}"
    priv: '*.*:ALL,GRANT'
    state: present
    login_user: root
    login_password: "{{ root_password }}"
  become: true

- name: Reload privilege tables
  community.mysql.mysql_query:
    login_user: root
    login_password: "{{ root_password }}"
    query: "FLUSH PRIVILEGES;"
  become: true
