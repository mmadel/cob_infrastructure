---
- name: Setup MySQL root user securely
  hosts: all
  become: true
  tasks:

    - name: Get MySQL root user plugin via socket
      community.mysql.mysql_query:
        query: "SELECT plugin FROM mysql.user WHERE user='root' AND host='localhost';"
        login_unix_socket: /run/mysqld/mysqld.sock
      register: root_plugin

    - name: Show root_plugin debug output
      debug:
        var: root_plugin
      become: false

    - name: Switch root to mysql_native_password if needed
      community.mysql.mysql_user:
        name: root
        host: localhost
        password: "{{ root_password }}"
        plugin: mysql_native_password
        priv: '*.*:ALL,GRANT'
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock
      when: root_plugin.query_result[0][0].plugin != 'mysql_native_password'

    - name: Remove anonymous MySQL users
      community.mysql.mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ root_password }}"

    - name: Remove MySQL test database
      community.mysql.mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ root_password }}"

    - name: Disallow root login remotely
      community.mysql.mysql_user:
        name: root
        host: "{{ item }}"
        state: absent
        login_user: root
        login_password: "{{ root_password }}"
      loop:
        - '%'

    - name: Ensure root user only allowed from localhost
      community.mysql.mysql_user:
        name: root
        host: localhost
        password: "{{ root_password }}"
        priv: '*.*:ALL,GRANT'
        state: present
        login_user: root
        login_password: "{{ root_password }}"

    - name: Reload privilege tables
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ root_password }}"
        query: "FLUSH PRIVILEGES;"
